-- Whi: Tween R√°pido + Refresh
-- Por: DeepSeek-R1

local Player = game:GetService("Players").LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")

local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")

-- Configura√ß√µes
local TWEEN_SPEED = 40 -- Muito mais r√°pido (valor menor = mais r√°pido)
local MAX_DISTANCE = 1000
local FOLLOW_DISTANCE = 10
local COLOR_CHANGE_DISTANCE = 50

-- Vari√°veis
local wildHorses = {}
local currentHorseIndex = 1
local currentTween = nil
local isFollowing = false
local horseHighlights = {}
local screenGui, refreshButton

-- Fun√ß√£o para encontrar cavalos selvagens
local function findWildHorses()
    -- Limpar destaques antigos
    for model, highlight in pairs(horseHighlights) do
        if highlight then
            highlight:Destroy()
        end
    end
    horseHighlights = {}
    wildHorses = {}
    
    -- Procurar em todos os descendentes do Workspace
    for _, descendant in ipairs(workspace:GetDescendants()) do
        if descendant:IsA("Model") then
            local hasHumanoid = descendant:FindFirstChildOfClass("Humanoid")
            local hasRootPart = descendant:FindFirstChild("HumanoidRootPart")
            local hasWildTag = string.find(descendant.Name, "{") -- Adaptado para Wild Horse Islands
            
            if hasHumanoid and hasRootPart and hasWildTag then
                local distance = (descendant.HumanoidRootPart.Position - Character.HumanoidRootPart.Position).Magnitude
                
                if distance <= MAX_DISTANCE then
                    table.insert(wildHorses, {
                        Model = descendant,
                        RootPart = descendant.HumanoidRootPart
                    })
                    
                    -- Criar highlight
                    local highlight = Instance.new("Highlight")
                    highlight.Name = "WildHorseHighlight"
                    highlight.Adornee = descendant
                    highlight.FillTransparency = 0.5
                    highlight.OutlineTransparency = 0
                    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                    highlight.Parent = descendant
                    horseHighlights[descendant] = highlight
                end
            end
        end
    end
    
    return #wildHorses
end

-- Fun√ß√£o para tween ultra r√°pido at√© o cavalo
local function fastTweenToHorse(target)
    if not target or not target.RootPart then return end
    
    -- Cancelar tween atual se existir
    if currentTween then
        currentTween:Cancel()
        currentTween = nil
    end
    
    local rootPart = Character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end
    
    local targetPos = target.RootPart.Position + Vector3.new(0, 3, -5)  -- 5 unidades atr√°s do cavalo
    
    -- Configura√ß√£o do tween r√°pido
    local tweenInfo = TweenInfo.new(
        (rootPart.Position - targetPos).Magnitude / TWEEN_SPEED,
        Enum.EasingStyle.Linear,  -- Mais r√°pido que Quad
        Enum.EasingDirection.Out
    )
    
    currentTween = TweenService:Create(rootPart, tweenInfo, {
        CFrame = CFrame.new(targetPos, target.RootPart.Position)
    })
    
    currentTween:Play()
    return currentTween
end

-- Fun√ß√£o para seguir o cavalo continuamente
local function followHorseContinuously()
    if #wildHorses == 0 then return end
    
    while isFollowing do
        local horse = wildHorses[currentHorseIndex]
        if not horse or not horse.RootPart then break end
        
        -- Verificar dist√¢ncia at√© o cavalo
        local distance = (horse.RootPart.Position - Character.HumanoidRootPart.Position).Magnitude
        
        -- Se estiver longe, mover at√© o cavalo
        if distance > FOLLOW_DISTANCE then
            fastTweenToHorse(horse)
        end
        
        -- Esperar antes da pr√≥xima verifica√ß√£o
        task.wait(0.5)
    end
end

-- Fun√ß√£o para atualizar cores do ESP baseado na dist√¢ncia
local function updateESPColors()
    for horseModel, highlight in pairs(horseHighlights) do
        if horseModel:IsDescendantOf(workspace) and horseModel:FindFirstChild("HumanoidRootPart") then
            local distance = (horseModel.HumanoidRootPart.Position - Character.HumanoidRootPart.Position).Magnitude
            
            -- Calcular cor baseada na dist√¢ncia (verde perto, vermelho longe)
            local colorRatio = math.clamp(distance / COLOR_CHANGE_DISTANCE, 0, 1)
            local color = Color3.new(colorRatio, 1 - colorRatio, 0)
            
            highlight.FillColor = color
            highlight.OutlineColor = color
        else
            -- Remover highlight se o cavalo n√£o existir mais
            if highlight then
                highlight:Destroy()
            end
            horseHighlights[horseModel] = nil
        end
    end
end

-- Mover para o pr√≥ximo cavalo
local function moveToNextHorse()
    if #wildHorses == 0 then return end
    
    currentHorseIndex = (currentHorseIndex % #wildHorses) + 1
    isFollowing = true
    followHorseContinuously()
end

-- Mover para o cavalo anterior
local function moveToPrevHorse()
    if #wildHorses == 0 then return end
    
    currentHorseIndex = currentHorseIndex - 1
    if currentHorseIndex < 1 then
        currentHorseIndex = #wildHorses
    end
    
    isFollowing = true
    followHorseContinuously()
end

-- Fun√ß√£o para atualizar a lista de cavalos
local function refreshHorses()
    -- Resetar vari√°veis
    if currentTween then
        currentTween:Cancel()
        currentTween = nil
    end
    
    isFollowing = false
    currentHorseIndex = 1
    
    -- Encontrar novos cavalos
    local horseCount = findWildHorses()
    
    -- Come√ßar a seguir novamente se encontrou cavalos
    if horseCount > 0 then
        isFollowing = true
        followHorseContinuously()
    end
    
    return horseCount
end

-- Criar GUI para mobile com bot√£o de refresh
local function createMobileGUI()
    screenGui = Instance.new("ScreenGui")
    screenGui.Name = "WHI_HorseTracker"
    screenGui.Parent = Player:WaitForChild("PlayerGui")
    screenGui.ResetOnSpawn = false
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0.5, 0, 0.18, 0)
    mainFrame.Position = UDim2.new(0.05, 0, 0.78, 0)
    mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
    mainFrame.BackgroundTransparency = 0.3
    mainFrame.Parent = screenGui
    
    local nextButton = Instance.new("TextButton")
    nextButton.Text = "PR√ìXIMO"
    nextButton.Size = UDim2.new(0.3, 0, 1, 0)
    nextButton.Position = UDim2.new(0, 5, 0, 0)
    nextButton.BackgroundColor3 = Color3.fromRGB(80, 160, 220)
    nextButton.TextColor3 = Color3.new(1, 1, 1)
    nextButton.TextScaled = true
    nextButton.Parent = mainFrame
    nextButton.MouseButton1Click:Connect(moveToNextHorse)
    
    local prevButton = Instance.new("TextButton")
    prevButton.Text = "ANTERIOR"
    prevButton.Size = UDim2.new(0.3, 0, 1, 0)
    prevButton.Position = UDim2.new(0.35, 0, 0, 0)
    prevButton.BackgroundColor3 = Color3.fromRGB(80, 160, 220)
    prevButton.TextColor3 = Color3.new(1, 1, 1)
    prevButton.TextScaled = true
    prevButton.Parent = mainFrame
    prevButton.MouseButton1Click:Connect(moveToPrevHorse)
    
    -- Bot√£o de Refresh
    refreshButton = Instance.new("TextButton")
    refreshButton.Text = "üîÑ ATUALIZAR"
    refreshButton.Size = UDim2.new(0.3, 0, 1, 0)
    refreshButton.Position = UDim2.new(0.7, 0, 0, 0)
    refreshButton.BackgroundColor3 = Color3.fromRGB(180, 80, 180)
    refreshButton.TextColor3 = Color3.new(1, 1, 1)
    refreshButton.TextScaled = true
    refreshButton.Parent = mainFrame
    refreshButton.MouseButton1Click:Connect(refreshHorses)
    
    return screenGui
end

-- Inicializa√ß√£o
local function initialize()
    -- Esperar pelo personagem estar pronto
    while not Character:FindFirstChild("HumanoidRootPart") do
        task.wait(1)
    end
    
    -- Criar GUI
    createMobileGUI()
    
    -- Encontrar cavalos inicialmente
    refreshHorses()
    
    -- Loop principal para atualizar ESP
    RunService.Heartbeat:Connect(updateESPColors)
    
    -- Atualizar lista de cavalos periodicamente
    while true do
        task.wait(15)
        refreshHorses()
    end
end

-- Iniciar script
task.spawn(initialize)

print("Wild Horse Islands Horse Tracker ativado! Tween Speed: " .. TWEEN_SPEED)
